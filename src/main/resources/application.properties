server.port=8081

vaadin.frontend.hotdeploy=true

########################--POSTGRESQL CONNECTION--#######################3
spring.datasource.url=${POSTGRESQL_HOST}
spring.datasource.username=${POSTGRESQL_USER}
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.jpa.hibernate.ddl-auto=update

########################--OPA CONNECTION--#######################3
opa.url=${OPA_URL}

########################--KEYCLOAK CONNECTION--#######################3
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}
# spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:${server.port}/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT}
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.hikari.auto-commit=false
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.resourceserver.jwt.issuer-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
